{
  "name": "geojs",
  "version": "0.0.0-semantically-released",
  "description": "JavaScript Geo Visualization and Analysis Library",
  "homepage": "https://github.com/OpenGeoscience/geojs",
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/OpenGeoscience/geojs/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/OpenGeoscience/geojs"
  },
  "dependencies": {
    "color-name": "^1.1.4",
    "earcut": "^2.2.3",
    "gl-mat3": "^2.0.0",
    "gl-mat4": "^1.2.0",
    "gl-vec3": "^1.1.3",
    "gl-vec4": "^1.0.1",
    "jquery": "^3.6.0",
    "kdbush": "^3.0.0",
    "mousetrap": "^1.6.5",
    "proj4": "^2.7.5",
    "vgl": "0.3.11"
  },
  "optionalDependencies": {
    "d3": "^3.5.17",
    "hammerjs": "^2.0.8",
    "vtk.js": "*"
  },
  "devDependencies": {
    "@babel/core": "^7.16.5",
    "@babel/plugin-proposal-class-properties": "^7.16.5",
    "@babel/preset-env": "^7.16.5",
    "@jsdevtools/coverage-istanbul-loader": "^3.0.5",
    "babel-loader": "^8.2.3",
    "babel-plugin-istanbul": "^6.1.1",
    "bootstrap": "^3.4.1",
    "bootswatch": "^3.4.1",
    "codemirror": "^5.65.0",
    "colorbrewer": "^1.5.1",
    "css-loader": "^6.5.1",
    "docco": "^0.9.1",
    "eslint": "^7.12.1",
    "eslint-config-semistandard": "^16.0.0",
    "eslint-config-standard": "^16.0.3",
    "eslint-plugin-import": "^2.25.3",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-promise": "^5.0.0",
    "expose-loader": "^3.1.0",
    "express": "^4.17.2",
    "fs-extra": "^10.0.0",
    "glob": "^7.2.0",
    "glslang-validator-prebuilt": "0.0.6",
    "imports-loader": "^3.1.1",
    "jaguarjs-jsdoc": "^1.0.2",
    "jasmine-core": "^4.0.0",
    "js-yaml": "^4.1.0",
    "jsdoc": "^3.6.7",
    "jsdoc-autoprivate": "0.0.1",
    "jsonlint-mod": "^1.7.6",
    "jstransformer-markdown-it": "^2.0.0",
    "karma": "^6.3.13",
    "karma-chrome-launcher": "^3.1.0",
    "karma-coverage": "^2.1.0",
    "karma-firefox-launcher": "^2.1.2",
    "karma-jasmine": "^4.0.1",
    "karma-jasmine-html-reporter": "^1.7.0",
    "karma-sinon": "^1.0.5",
    "karma-sourcemap-loader": "^0.3.8",
    "karma-spec-reporter": "^0.0.33",
    "karma-webpack": "^5.0.0",
    "nib": "^1.1.2",
    "pako": "^2.0.4",
    "pug": "^3.0.2",
    "pug-lint": "^2.6.0",
    "pug-load": "^3.0.0",
    "raw-body": "^2.4.2",
    "resemblejs": "^4.0.0",
    "semantic-release": "^19.0.2",
    "serve-index": "^1.9.1",
    "shader-loader": "^1.3.1",
    "sinon": "^13.0.1",
    "string-replace-webpack-plugin": "^0.1.3",
    "style-loader": "^3.3.1",
    "stylus": "^0.56.0",
    "stylus-loader": "^6.2.0",
    "terser-webpack-plugin": "^5.3.1",
    "touch-emulator": "^1.0.0",
    "typeface-lato": "^1.1.13",
    "webpack": "^5.68.0",
    "webpack-cli": "^4.9.1",
    "webpack-merge": "^5.8.0"
  },
  "release": {
    "plugins": [
      "@semantic-release/commit-analyzer",
      "@semantic-release/release-notes-generator",
      "@semantic-release/npm",
      [
        "@semantic-release/github",
        {
          "assets": [
            {
              "path": "dist/built/geo.js",
              "label": "Full JS distribution (geo.js)"
            },
            {
              "path": "dist/built/geo.min.js",
              "label": "Minified JS distribution (geo.min.js)"
            },
            {
              "path": "dist/built/geo.lean.js",
              "label": "Lean JS distribution (geo.lean.js)"
            },
            {
              "path": "dist/built/geo.lean.min.js",
              "label": "Lean minified JS distribution (geo.lean.min.js)"
            }
          ]
        }
      ]
    ]
  },
  "scripts": {
    "build": "webpack --config webpack.config.js && webpack --config webpack-lean.config.js",
    "build-examples": "node examples/build.js && webpack --config webpack-examples.config.js",
    "build-website-examples": "node examples/build-website.js && webpack --config webpack-website-examples.config.js",
    "build-tutorials": "node tutorials/build.js && webpack --config webpack-tutorials.config.js",
    "build-website-tutorials": "node tutorials/build-website.js && webpack --config webpack-website-tutorials.config.js",
    "lint": "eslint --cache . --max-warnings=0",
    "puglint": "pug-lint src examples",
    "glsllint": "find . \\( -name '*.frag' \\) -exec sh -c 'for n; do python scripts/preprocess_glsl.py \"$n\" | node_modules/glslang-validator-prebuilt/bin/glslangValidator --stdin -S frag || exit 1; done' sh {} \\+ && find . \\( -name '*.vert' \\) -exec sh -c 'for n; do python scripts/preprocess_glsl.py \"$n\" | node_modules/glslang-validator-prebuilt/bin/glslangValidator --stdin -S vert || exit 1; done' sh {} \\+",
    "test-headless": "GEOJS_TEST_CASE=tests/test-unit.js karma start karma-cov.conf.js --single-run --browsers ChromeHeadlessTouch,FirefoxHeadlessTouch",
    "test-headless-all": "GEOJS_TEST_CASE=tests/test-unit.js karma start karma-cov.conf.js --single-run --browsers ChromeHeadlessTouch,FirefoxHeadlessTouch",
    "test-headed": "GEOJS_TEST_CASE=tests/test-headed.js karma start karma-cov.conf.js --single-run --browsers ChromeFull",
    "tets-headed-all": "GEOJS_TEST_CASE=tests/test-headed.js karma start karma-cov.conf.js --single-run --browsers ChromeFull,FirefoxWithProxy",
    "test-headed-xvfb": "GEOJS_TEST_CASE=tests/test-headed.js xvfb-run -s '-ac -screen 0 1280x1024x24' karma start karma-cov.conf.js --single-run --browsers ChromeFull",
    "test-webglheadless": "GEOJS_TEST_CASE=tests/test-gl.js karma start karma-cov.conf.js --single-run --browsers ChromeHeadlessTouch",
    "test-webglheadless-all": "GEOJS_TEST_CASE=tests/test-gl.js karma start karma-cov.conf.js --single-run --browsers ChromeHeadlessTouch,FirefoxHeadlessTouch",
    "test-tutorials": "GEOJS_TEST_CASE=tests/tutorials.js karma start karma-cov.conf.js --single-run --browsers ChromeHeadlessTouch",
    "test-tutorialsci-all": "GEOJS_TEST_CASE=tests/tutorials.js karma start karma-cov.conf.js --single-run --browsers ChromeHeadlessTouch,FirefoxHeadlessTouch",
    "get-data-files": "node scripts/datastore.js dist/data",
    "ci-clean": "git clean -fxd dist -e dist/data jsdoc/tmpl jsdoc/static images lcov",
    "ci": "npm run ci-build && npm run ci-test",
    "ci-build": "bash -c '(webpack --config webpack.config.js & webpack --config webpack-lean.config.js & npm run docs & npm run get-data-files & npm run lint & npm run puglint & npm run glsllint & npm run build-examples & npm run build-tutorials & wait -n && wait -n && wait -n && wait -n && wait -n && wait -n && wait -n && wait -n && wait -n)'",
    "ci-build-wait": "bash -c '(webpack --config webpack.config.js & webpack --config webpack-lean.config.js & npm run docs & npm run get-data-files & npm run lint & npm run puglint & npm run glsllint & npm run build-examples & npm run build-tutorials & wait -n && wait -n && wait -n && wait -n && wait -n && wait -n && wait -n && wait -n && wait -n && FAIL=0 || FAIL=1; wait; [ \"$FAIL\" == \"0\" ])'",
    "ci-test": "npm run test-headless && npm run test-webglheadless && npm run test-headed && npm run test-tutorials",
    "ci-xvfb": "npm run ci-clean && npm run ci-build && TEST_SAVE_IMAGE='all' xvfb-run -s '-ac -screen 0 1280x1024x24' npm run ci-test",
    "start": "karma start karma.conf.js",
    "examples": "node examples/build.js && webpack --config webpack-examples.config.js && node tutorials/build.js && webpack --config webpack-tutorials.config.js && node ./tests/runners/server.js --host \"${HOST-}\" --port ${PORT-8082} --dist",
    "docs": "jsdoc --pedantic -d dist/apidocs -r src package.json -c jsdoc.conf.json",
    "website": "cd website && npx hexo server",
    "setup-website": "cd website && npm install",
    "build-website": "npm run ci-build && npm run ci-build-website",
    "ci-build-website": "cp -a dist/built/. website/source/built && bash -c '(npm run build-website-examples & npm run build-website-tutorials & wait -n && wait -n)' && cd dist && cp -ar data ../website/source/. && rm -rf ../website/source/data/tiles && rm -rf ../website/source/data/tiles.tgz && rm -rf ../website/source/data/base-images && rm -rf ../website/source/data/base-images.tgz && cp -ar apidocs/. ../website/source/apidocs && cd ../website && npm install && rm -f db.json && npx hexo generate",
    "prepublishOnly": "webpack --config webpack.config.js && webpack --config webpack-lean.config.js && cp dist/built/*.js .",
    "semantic-release": "semantic-release"
  },
  "keywords": [
    "map",
    "gis",
    "webgl",
    "svg"
  ],
  "main": "geo.lean.js"
}
